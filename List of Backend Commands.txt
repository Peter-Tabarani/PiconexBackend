List of All Backend Commands

FORMAT
returnType commandName(parameters: parameterTypes)

When structuring the routes, I would use something like this:

[PointofContact, Student][] getAppointmentsbyAdminIDandDate(admin_id: number, date: Date)
would be
/appointments/admin/{admin_id}/date/{date}


**GET COMMANDS**

BULK COMMANDS
Person[] getPeople()
Admin[] getAdmins()
Students[] getStudents()
Activity[] getActivity()
Documentation[] getDocumentation()
PersonalDocumentation[] getPersonalDocumentation()
SpecificDocumentation[] getSpecificDocumentation()
PointofContact[] getPointsofContact()
Disability[] getDisabilities()
Accommodation[] getAccommodations()

{student_id, disability_id}[] getStuDis()
{student_id, accommodation_id}[] getStuAccom()
{admin_id, student_id}[] getPinned()
{admin_id, activity_id}[] getPocAdmin()

ID COMMANDS
Person getPersonByID(person_id: number)
Admin getAdminByID(admin_id: number)
Students getStudentByID(student_id: number)
Activity getActivityByID(activity_id: number)
Documentation getDocumentationByID(documentation_id: number)
PersonalDocumentation getPersonalDocumentationByID(personal_documentation_id: number)
SpecificDocumentation getSpecificDocumentationByID(specific_documentation_id: number)
PointofContact getPointofContactByID(point_of_contact_id: number)
Disability getDisabilityByID(disability_id: number)
Accommodation getAccommodationByID(accommodation_id: number)

MISCELLANEOUS
Student[] getPinnedByAdminID(admin_id: number)
Student[] getStudentsByName(name: string)
Activity[] getActivitiesByDate(date: Date)
SpecificDocumentation[] getSpecificDocumentationByStudentID(student_id: number)
PointOfContact[] getPointsOfContactByAdminIDAndDate(admin_id: number, date: Date)
PointOfContact[] getFuturePointsOfContactByAdminID(admin_id: number)
PointOfContact[] getPastPointsOfContactByStudentIDAndAdminID(student_id: number, admin_id: number)
PointOfContact[] getFuturePointsOfContactByStudentID(student_id: number)
PointOfContact[] getFuturePointsOfContactByStudentIDAndAdminID(student_id: number, admin_id: number)
{Disability, hasDisability: boolean}[] getDisabilitiesByStudentID(student_id: number)
{Accommodation, hasAccommodation: boolean}[] getAccommodationsByStudentID(student_id: number)

NEED TO ADD
PersonalDocumentation[] getPersonalDocumentationByAdminID(admin_id: number)
PointOfContact[] getPointsOfContactByStudentID(student_id: number)

**DASHBOARD**
{activity_id, summary: string, datetime: Date} getActivitiesSummary()
// PointOfContact formatter. The handler needs to pull the Student data along with the PointOfContact. New route?
{point_of_contact_id: number, name: string, event_datetime: Date} getPointsOfContactSummaryByAdminIDAndDate(admin_id: number, date: Date)

**STUDENT INFO**
// ActivitiesSummaryByStudent formatter. The handler needs to pull the respective other data. Definitely new route
{activity_id: number, summary: string, datetime: Date} getActivitiesSummaryByStudentID(student_id: number)

**CREATE COMMANDS**
CreateStudent(student_id: number)
CreateAdmin(admin_id: number)
CreateAccommodation(accommodation_id: number)
CreateDisability(disability_id: number)
CreateSpecificDocumentation(specific_documentation_id: number)
CreatePersonalDocumentation(personal_documentation_id: number)
CreatePointOfContact(point_of_contact_id: number)

**DELETE COMMANDS**
DeleteStudent(student_id: number)
DeleteAdmin(admin_id: number)
DeleteAccommodation(accommodation_id: number)
DeleteDisability(disability_id: number)
DeleteSpecificDocumentation(specific_documentation_id: number)
DeletePersonalDocumentation(personal_documentation_id: number)
DeletePointOfContact(point_of_contact_id: number)

DeletePersonalDocumentationByAdminID(admin_id: number) // NEED TO DO
DeleteSpecificDocumentationByStudentID(student_id: number) // NEED TO DO
DeletePointOfContactByStudentID(student_id: number) // NEED TO DO
DeletePocAdminByAdminID(admin_id: number)
DeletePinnedByAdminID(admin_id: number)
DeleteStuDisByStudentID(student_id: number)
DeleteStuAccomByStudentID(student_id: number)
DeletePocAdminByPointOfContactID(point_of_contact_id: number) // NEED TO DO
DeletePinnedByStudentID(student_id: number) // NEED TO DO
DeleteStuDisByDisabilityID(disability_id: number) // NEED TO DO
DeleteStuAccomByAccommodationID(accommodation_id: number) // NEED TO DO

**UPDATE COMMANDS**
UpdateStudent(student_id: number)
UpdateAdmin(admin_id: number)
UpdateAccommodation(accommodation_id: number)
UpdateDisability(disability_id: number)
UpdateSpecificDocumentation(specific_documentation_id: number)
UpdatePersonalDocumentation(personal_documentation_id: number)
UpdatePointOfContact(point_of_contact_id: number)
