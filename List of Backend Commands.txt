List of All Backend Commands

FORMAT
returnType commandName(parameters: parameterTypes)

When structuring the routes, I would use something like this:

[PointofContact, Student][] getAppointmentsbyAdminIDandDate(id: number, date: Date)
would be
/appointments/admin/{id}/date/{date}


**GET COMMANDS**

BULK COMMANDS
Person[] getPeople()
Admin[] getAdmins()
Students[] getStudents()
Activity[] getActivity()
Documentation[] getDocumentation()
PersonalDocumentation[] getPersonalDocumentation()
SpecificDocumentation[] getSpecificDocumentation()
PointofContact[] getPointsofContact()
Disability[] getDisabilities()
Accommodation[] getAccommodations()

{id, disability_id}[] getStuDis()
{id, accommodation_id}[] getStuAccom()
{id(admin), id(student)}[] getPinned()
{id, activity_id}[] getPocAdmin()

ID COMMANDS
Person getPersonByID(id: number)
Admin getAdminByID(id: number)
Students getStudentByID(id: number)
Activity getActivityByID(activity_id: number)
Documentation getDocumentationByID(activity_id: number)
PersonalDocumentation getPersonalDocumentationByID(activity_id: number)
SpecificDocumentation getSpecificDocumentationByID(activity_id: number)
PointofContact getPointofContactByID(activity_id: number)
Disability getDisabilityByID(disability_id: number)
Accommodation getAccommodationByID(accommodation_id: number)

MISCELLANEOUS
Student[] getPinnedByAdminID(id: number)
Student[] getStudentsByName(name: string)
Activity[] getActivitiesByDate(date: Date)
SpecificDocumentation[] getSpecificDocumentationByStudentID(id: number)
PointOfContact[] getPointsOfContactByAdminIDAndDate(id: number, date: Date)
PointOfContact[] getFuturePointsOfContactByAdminID(id: number) // NEED TO DO
PointOfContact[] getPastPointsOfContactByStudentIDAndAdminID(id(student): number, id(admin): number) // NEED TO DO
PointOfContact[] getFuturePointsOfContactByStudentID(id: number) // NEED TO DO
PointOfContact[] getFuturePointsOfContactByStudentIDAndAdminID(id(student): number, id(admin): number)
{Disability, hasDisability: boolean}[] getDisabilitiesByStudentID(id: number) // NEED TO MODIFY
{Accommodation, hasAccommodation: boolean}[] getAccommodationsByStudentID(id: number) // NEED TO MODIFY

NEED TO ADD
{Activity, name: string} getIncomingActivity(id: number)
PersonalDocumentation[] getPersonalDocumentationByAdminID(id: number)
PointOfContact[] getPointsOfContactByStudentID(id: number)

// PointOfContact formatter. The handler needs to pull the Student data along with the PointOfContact. New route?
{activity_id: number, name: string, event_datetime: Date} getPointsOfContactSummaryByAdminIDAndDate(id: number, date: Date)

// ActivitiesSummaryByDate formatter. The handler needs to pull the respective other data. Definitely new route
{activity_id: number, summary: string, datetime: Date} getActivitiesSummaryByDate(date: Date)

// ActivitiesSummaryByStudent formatter. The handler needs to pull the respective other data. Definitely new route
{activity_id: number, summary: string, datetime: Date} getActivitiesSummaryByStudentID(id: number)

**CREATE COMMANDS**
CreateStudent(id: number)
CreateAdmin(id: number)
CreateAccommodation(accommodation_id: number)
CreateDisability(disability_id: number)
CreateSpecificDocumentation(activity_id: number)
CreatePersonalDocumentation(activity_id: number)
CreatePointOfContact(activity_id: number)

**DELETE COMMANDS**
DeleteStudent(id: number)
DeleteAdmin(id: number)
DeleteAccommodation(accommodation_id: number)
DeleteDisability(disability_id: number)
DeleteSpecificDocumentation(activity_id: number)
DeletePersonalDocumentation(activity_id: number)
DeletePointOfContact(activity_id: number)

DeletePersonalDocumentationByAdminID(id: number) // NEED TO DO
DeleteSpecificDocumentationByStudentID(id: number) // NEED TO DO
DeletePointOfContactByStudentID(id: number) // NEED TO DO
DeletePocAdminByAdminID(id: number)
DeletePinnedByAdminID(id: number)
DeleteStuDisByStudentID(id: number)
DeleteStuAccomByStudentID(id: number)

**UPDATE COMMANDS**
UpdateStudent(id: number)
UpdateAdmin(id: number)
UpdateAccommodation(accommodation_id: number)
UpdateDisability(disability_id: number)
UpdateSpecificDocumentation(activity_id: number)
UpdatePersonalDocumentation(activity_id: number)
UpdatePointOfContact(activity_id: number)